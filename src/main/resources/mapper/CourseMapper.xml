<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noi.oj.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.noi.oj.domain.Course">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="study_num" jdbcType="INTEGER" property="studyNum" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="image" jdbcType="VARCHAR" property="image" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.noi.oj.domain.Course">
    <result column="instructions" jdbcType="LONGVARCHAR" property="instructions" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, user_id, class_id, title, difficulty, time, study_num, description, gmt_create, 
    gmt_modified, state, image
  </sql>
  <sql id="Blob_Column_List">
    instructions
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.noi.oj.domain.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.noi.oj.domain.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.noi.oj.domain.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.noi.oj.domain.Course">
    insert into course (course_id, user_id, class_id, 
      title, difficulty, time, 
      study_num, description, gmt_create, 
      gmt_modified, state, image, 
      instructions)
    values (#{courseId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{classId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{difficulty,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, 
      #{studyNum,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, 
      #{instructions,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.noi.oj.domain.Course" useGeneratedKeys="true" keyProperty="courseId">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="studyNum != null">
        study_num,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="instructions != null">
        instructions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="studyNum != null">
        #{studyNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.noi.oj.domain.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null">
        difficulty = #{record.difficulty,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.studyNum != null">
        study_num = #{record.studyNum,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.instructions != null">
        instructions = #{record.instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      study_num = #{record.studyNum,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      instructions = #{record.instructions,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      study_num = #{record.studyNum,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.noi.oj.domain.Course">
    update course
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        difficulty = #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="studyNum != null">
        study_num = #{studyNum,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="instructions != null">
        instructions = #{instructions,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.noi.oj.domain.Course">
    update course
    set user_id = #{userId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      study_num = #{studyNum,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      instructions = #{instructions,jdbcType=LONGVARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.noi.oj.domain.Course">
    update course
    set user_id = #{userId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      study_num = #{studyNum,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>