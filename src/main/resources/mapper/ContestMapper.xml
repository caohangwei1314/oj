<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noi.oj.dao.ContestMapper">
  <resultMap id="BaseResultMap" type="com.noi.oj.domain.Contest">
    <id column="contest_id" jdbcType="INTEGER" property="contestId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="defunct" jdbcType="CHAR" property="defunct" />
    <result column="is_private" jdbcType="TINYINT" property="isPrivate" />
    <result column="langmask" jdbcType="INTEGER" property="langmask" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="source" jdbcType="INTEGER" property="source" />
  </resultMap>
  <resultMap id="UsersBaseResultMap" type="com.noi.oj.domain.Users">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="submit" jdbcType="INTEGER" property="submit" />
    <result column="solved" jdbcType="INTEGER" property="solved" />
    <result column="defunct" jdbcType="CHAR" property="defunct" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="accesstime" jdbcType="TIMESTAMP" property="accesstime" />
    <result column="volume" jdbcType="INTEGER" property="volume" />
    <result column="language" jdbcType="INTEGER" property="language" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="user_class" jdbcType="TINYINT" property="userClass" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="experience" jdbcType="VARCHAR" property="experience" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.noi.oj.domain.Contest">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    contest_id, title, start_time, end_time, defunct, is_private, langmask, password, 
    user_id,source
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.noi.oj.domain.ContestExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.noi.oj.domain.ContestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from contest
    where contest_id = #{contestId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contest
    where contest_id = #{contestId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.noi.oj.domain.ContestExample">
    delete from contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.noi.oj.domain.Contest">
    insert into contest (contest_id, title, start_time, 
      end_time, defunct, is_private, 
      langmask, password, user_id, 
      description)
    values (#{contestId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{defunct,jdbcType=CHAR}, #{isPrivate,jdbcType=TINYINT}, 
      #{langmask,jdbcType=INTEGER}, #{password,jdbcType=CHAR}, #{userId,jdbcType=BIGINT}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.noi.oj.domain.Contest" useGeneratedKeys="true" keyProperty="contestId">
    insert into contest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contestId != null">
        contest_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="defunct != null">
        defunct,
      </if>
      <if test="isPrivate != null">
        is_private,
      </if>
      <if test="langmask != null">
        langmask,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contestId != null">
        #{contestId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defunct != null">
        #{defunct,jdbcType=CHAR},
      </if>
      <if test="isPrivate != null">
        #{isPrivate,jdbcType=TINYINT},
      </if>
      <if test="langmask != null">
        #{langmask,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.noi.oj.domain.ContestExample" resultType="java.lang.Long">
    select count(*) from contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contest
    <set>
      <if test="record.contestId != null">
        contest_id = #{record.contestId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.defunct != null">
        defunct = #{record.defunct,jdbcType=CHAR},
      </if>
      <if test="record.isPrivate != null">
        is_private = #{record.isPrivate,jdbcType=TINYINT},
      </if>
      <if test="record.langmask != null">
        langmask = #{record.langmask,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update contest
    set contest_id = #{record.contestId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      defunct = #{record.defunct,jdbcType=CHAR},
      is_private = #{record.isPrivate,jdbcType=TINYINT},
      langmask = #{record.langmask,jdbcType=INTEGER},
      password = #{record.password,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contest
    set contest_id = #{record.contestId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      defunct = #{record.defunct,jdbcType=CHAR},
      is_private = #{record.isPrivate,jdbcType=TINYINT},
      langmask = #{record.langmask,jdbcType=INTEGER},
      password = #{record.password,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.noi.oj.domain.Contest">
    update contest
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="defunct != null">
        defunct = #{defunct,jdbcType=CHAR},
      </if>
      <if test="isPrivate != null">
        is_private = #{isPrivate,jdbcType=TINYINT},
      </if>
      <if test="langmask != null">
        langmask = #{langmask,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where contest_id = #{contestId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.noi.oj.domain.Contest">
    update contest
    set title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      defunct = #{defunct,jdbcType=CHAR},
      is_private = #{isPrivate,jdbcType=TINYINT},
      langmask = #{langmask,jdbcType=INTEGER},
      password = #{password,jdbcType=CHAR},
      user_id = #{userId,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARCHAR}
    where contest_id = #{contestId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.noi.oj.domain.Contest">
    update contest
    set title = #{title,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      defunct = #{defunct,jdbcType=CHAR},
      is_private = #{isPrivate,jdbcType=TINYINT},
      langmask = #{langmask,jdbcType=INTEGER},
      password = #{password,jdbcType=CHAR},
      user_id = #{userId,jdbcType=BIGINT}
    where contest_id = #{contestId,jdbcType=INTEGER}
  </update>
  <select id="countUsers" resultType="java.lang.Integer">
    select count(distinct user_id)
    from contest
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*)
    from contest
    where NOW() &gt;= end_time
    <if test="userId != null">
      and user_id = #{userId,jdbcType=BIGINT}
    </if>
  </select>
  <select id="selectList" resultMap="BaseResultMap" parameterType="com.noi.oj.domain.Conditions">
    select *
    from contest
    where NOW() &gt;= end_time
    <if test="userId != null">
      and user_id = #{userId,jdbcType=BIGINT}
    </if>
    order by start_time desc
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset},${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="rank" resultMap="UsersBaseResultMap">
    select c.*,sum(IF(b.c_accepted>0,1,0)) as count
    from contest as a
    right join contest_problem as b
    on a.contest_id = b.contest_id
    inner join users as c
    on a.user_id = c.user_id
    group by c.user_id
    order by count
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset},${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select *
    from contest
    where user_id = #{userId,jdbcType=BIGINT} and NOW() &gt;= start_time and NOW() &lt;= end_time and status = 0
  </select>
  <select id="selectMaxId" resultType="java.lang.Integer">
      select max(contest_id) as contest_id
      from contest
  </select>
  <delete id="deleteByContestIdAndUserId" parameterType="com.noi.oj.domain.Conditions">
    delete from contest where user_id = #{userId,jdbcType=BIGINT} and contest_id = #{contestId,jdbcType=INTEGER}
  </delete>
</mapper>