<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noi.oj.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.noi.oj.domain.Users">
    <id column="pk_id" jdbcType="BIGINT" property="pkId" />
    <result column="nick" jdbcType="VARCHAR" property="nick" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthday" jdbcType="INTEGER" property="birthday" />
    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="experience" jdbcType="VARCHAR" property="experience" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="user_class" jdbcType="TINYINT" property="userClass" />
    <result column="submit" jdbcType="INTEGER" property="submit" />
    <result column="solved" jdbcType="INTEGER" property="solved" />
    <result column="defunct" jdbcType="CHAR" property="defunct" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="accesstime" jdbcType="TIMESTAMP" property="accesstime" />
    <result column="volume" jdbcType="INTEGER" property="volume" />
    <result column="language" jdbcType="INTEGER" property="language" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pk_id, nick, email, image, sex, birthday, introduce, experience, province, city, 
    school, user_class, submit, solved, defunct, ip, accesstime, volume, language, password, 
    reg_time, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="com.noi.oj.domain.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where pk_id = #{pkId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users
    where pk_id = #{pkId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.noi.oj.domain.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.noi.oj.domain.Users">
    insert into users (pk_id, nick, email, 
      image, sex, birthday, 
      introduce, experience, province, 
      city, school, user_class, 
      submit, solved, defunct, 
      ip, accesstime, volume, 
      language, password, reg_time, 
      gmt_create, gmt_modified)
    values (#{pkId,jdbcType=BIGINT}, #{nick,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=INTEGER}, 
      #{introduce,jdbcType=VARCHAR}, #{experience,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{userClass,jdbcType=TINYINT}, 
      #{submit,jdbcType=INTEGER}, #{solved,jdbcType=INTEGER}, #{defunct,jdbcType=CHAR}, 
      #{ip,jdbcType=VARCHAR}, #{accesstime,jdbcType=TIMESTAMP}, #{volume,jdbcType=INTEGER}, 
      #{language,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{regTime,jdbcType=TIMESTAMP}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.noi.oj.domain.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        pk_id,
      </if>
      <if test="nick != null">
        nick,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="experience != null">
        experience,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="userClass != null">
        user_class,
      </if>
      <if test="submit != null">
        submit,
      </if>
      <if test="solved != null">
        solved,
      </if>
      <if test="defunct != null">
        defunct,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="accesstime != null">
        accesstime,
      </if>
      <if test="volume != null">
        volume,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkId != null">
        #{pkId,jdbcType=BIGINT},
      </if>
      <if test="nick != null">
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="userClass != null">
        #{userClass,jdbcType=TINYINT},
      </if>
      <if test="submit != null">
        #{submit,jdbcType=INTEGER},
      </if>
      <if test="solved != null">
        #{solved,jdbcType=INTEGER},
      </if>
      <if test="defunct != null">
        #{defunct,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="accesstime != null">
        #{accesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.noi.oj.domain.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.pkId != null">
        pk_id = #{record.pkId,jdbcType=BIGINT},
      </if>
      <if test="record.nick != null">
        nick = #{record.nick,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=INTEGER},
      </if>
      <if test="record.introduce != null">
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.experience != null">
        experience = #{record.experience,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.userClass != null">
        user_class = #{record.userClass,jdbcType=TINYINT},
      </if>
      <if test="record.submit != null">
        submit = #{record.submit,jdbcType=INTEGER},
      </if>
      <if test="record.solved != null">
        solved = #{record.solved,jdbcType=INTEGER},
      </if>
      <if test="record.defunct != null">
        defunct = #{record.defunct,jdbcType=CHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.accesstime != null">
        accesstime = #{record.accesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.volume != null">
        volume = #{record.volume,jdbcType=INTEGER},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set pk_id = #{record.pkId,jdbcType=BIGINT},
      nick = #{record.nick,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=INTEGER},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      experience = #{record.experience,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      user_class = #{record.userClass,jdbcType=TINYINT},
      submit = #{record.submit,jdbcType=INTEGER},
      solved = #{record.solved,jdbcType=INTEGER},
      defunct = #{record.defunct,jdbcType=CHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      accesstime = #{record.accesstime,jdbcType=TIMESTAMP},
      volume = #{record.volume,jdbcType=INTEGER},
      language = #{record.language,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.noi.oj.domain.Users">
    update users
    <set>
      <if test="nick != null">
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=INTEGER},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="experience != null">
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="userClass != null">
        user_class = #{userClass,jdbcType=TINYINT},
      </if>
      <if test="submit != null">
        submit = #{submit,jdbcType=INTEGER},
      </if>
      <if test="solved != null">
        solved = #{solved,jdbcType=INTEGER},
      </if>
      <if test="defunct != null">
        defunct = #{defunct,jdbcType=CHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="accesstime != null">
        accesstime = #{accesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.noi.oj.domain.Users">
    update users
    set nick = #{nick,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=INTEGER},
      introduce = #{introduce,jdbcType=VARCHAR},
      experience = #{experience,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      user_class = #{userClass,jdbcType=TINYINT},
      submit = #{submit,jdbcType=INTEGER},
      solved = #{solved,jdbcType=INTEGER},
      defunct = #{defunct,jdbcType=CHAR},
      ip = #{ip,jdbcType=VARCHAR},
      accesstime = #{accesstime,jdbcType=TIMESTAMP},
      volume = #{volume,jdbcType=INTEGER},
      language = #{language,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=BIGINT}
  </update>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where email = #{email,jdbcType=VARCHAR}
  </select>
    <select id="selectUserInfo" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select nick,email,image,sex,birthday,introduce,experience,province,city,school,user_class,submit,solved,volume,language
        from users
        where pk_id = #{pkId,jdbcType=BIGINT}
    </select>
</mapper>