<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noi.oj.dao.SolutionMapper">
  <resultMap id="BaseResultMap" type="com.noi.oj.domain.Solution">
    <id column="solution_id" jdbcType="INTEGER" property="solutionId" />
    <result column="problem_id" jdbcType="INTEGER" property="problemId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="memory" jdbcType="INTEGER" property="memory" />
    <result column="in_date" jdbcType="TIMESTAMP" property="inDate" />
    <result column="result" jdbcType="SMALLINT" property="result" />
    <result column="language" jdbcType="INTEGER" property="language" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="contest_id" jdbcType="INTEGER" property="contestId" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
    <result column="num" jdbcType="TINYINT" property="num" />
    <result column="code_length" jdbcType="INTEGER" property="codeLength" />
    <result column="judgetime" jdbcType="TIMESTAMP" property="judgetime" />
    <result column="pass_rate" jdbcType="DECIMAL" property="passRate" />
    <result column="lint_error" jdbcType="INTEGER" property="lintError" />
    <result column="judger" jdbcType="CHAR" property="judger" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    solution_id, problem_id, user_id, time, memory, in_date, result, language, ip, contest_id, 
    valid, num, code_length, judgetime, pass_rate, lint_error, judger
  </sql>
  <select id="selectByExample" parameterType="com.noi.oj.domain.SolutionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from solution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from solution
    where solution_id = #{solutionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from solution
    where solution_id = #{solutionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.noi.oj.domain.SolutionExample">
    delete from solution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.noi.oj.domain.Solution">
    insert into solution (solution_id, problem_id, user_id, 
      time, memory, in_date, 
      result, language, ip, 
      contest_id, valid, num, 
      code_length, judgetime, pass_rate, 
      lint_error, judger)
    values (#{solutionId,jdbcType=INTEGER}, #{problemId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      #{time,jdbcType=INTEGER}, #{memory,jdbcType=INTEGER}, #{inDate,jdbcType=TIMESTAMP}, 
      #{result,jdbcType=SMALLINT}, #{language,jdbcType=INTEGER}, #{ip,jdbcType=CHAR}, 
      #{contestId,jdbcType=INTEGER}, #{valid,jdbcType=TINYINT}, #{num,jdbcType=TINYINT}, 
      #{codeLength,jdbcType=INTEGER}, #{judgetime,jdbcType=TIMESTAMP}, #{passRate,jdbcType=DECIMAL}, 
      #{lintError,jdbcType=INTEGER}, #{judger,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.noi.oj.domain.Solution" keyProperty="solutionId" useGeneratedKeys="true">
    insert into solution
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="solutionId != null">
        solution_id,
      </if>
      <if test="problemId != null">
        problem_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="memory != null">
        memory,
      </if>
      <if test="inDate != null">
        in_date,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="contestId != null">
        contest_id,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="codeLength != null">
        code_length,
      </if>
      <if test="judgetime != null">
        judgetime,
      </if>
      <if test="passRate != null">
        pass_rate,
      </if>
      <if test="lintError != null">
        lint_error,
      </if>
      <if test="judger != null">
        judger,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="solutionId != null">
        #{solutionId,jdbcType=INTEGER},
      </if>
      <if test="problemId != null">
        #{problemId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        #{memory,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        #{result,jdbcType=SMALLINT},
      </if>
      <if test="language != null">
        #{language,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="contestId != null">
        #{contestId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=TINYINT},
      </if>
      <if test="codeLength != null">
        #{codeLength,jdbcType=INTEGER},
      </if>
      <if test="judgetime != null">
        #{judgetime,jdbcType=TIMESTAMP},
      </if>
      <if test="passRate != null">
        #{passRate,jdbcType=DECIMAL},
      </if>
      <if test="lintError != null">
        #{lintError,jdbcType=INTEGER},
      </if>
      <if test="judger != null">
        #{judger,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.noi.oj.domain.SolutionExample" resultType="java.lang.Long">
    select count(*) from solution
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update solution
    <set>
      <if test="record.solutionId != null">
        solution_id = #{record.solutionId,jdbcType=INTEGER},
      </if>
      <if test="record.problemId != null">
        problem_id = #{record.problemId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.memory != null">
        memory = #{record.memory,jdbcType=INTEGER},
      </if>
      <if test="record.inDate != null">
        in_date = #{record.inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=SMALLINT},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=INTEGER},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.contestId != null">
        contest_id = #{record.contestId,jdbcType=INTEGER},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=TINYINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=TINYINT},
      </if>
      <if test="record.codeLength != null">
        code_length = #{record.codeLength,jdbcType=INTEGER},
      </if>
      <if test="record.judgetime != null">
        judgetime = #{record.judgetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passRate != null">
        pass_rate = #{record.passRate,jdbcType=DECIMAL},
      </if>
      <if test="record.lintError != null">
        lint_error = #{record.lintError,jdbcType=INTEGER},
      </if>
      <if test="record.judger != null">
        judger = #{record.judger,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update solution
    set solution_id = #{record.solutionId,jdbcType=INTEGER},
      problem_id = #{record.problemId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      time = #{record.time,jdbcType=INTEGER},
      memory = #{record.memory,jdbcType=INTEGER},
      in_date = #{record.inDate,jdbcType=TIMESTAMP},
      result = #{record.result,jdbcType=SMALLINT},
      language = #{record.language,jdbcType=INTEGER},
      ip = #{record.ip,jdbcType=CHAR},
      contest_id = #{record.contestId,jdbcType=INTEGER},
      valid = #{record.valid,jdbcType=TINYINT},
      num = #{record.num,jdbcType=TINYINT},
      code_length = #{record.codeLength,jdbcType=INTEGER},
      judgetime = #{record.judgetime,jdbcType=TIMESTAMP},
      pass_rate = #{record.passRate,jdbcType=DECIMAL},
      lint_error = #{record.lintError,jdbcType=INTEGER},
      judger = #{record.judger,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.noi.oj.domain.Solution">
    update solution
    <set>
      <if test="problemId != null">
        problem_id = #{problemId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="memory != null">
        memory = #{memory,jdbcType=INTEGER},
      </if>
      <if test="inDate != null">
        in_date = #{inDate,jdbcType=TIMESTAMP},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=SMALLINT},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="contestId != null">
        contest_id = #{contestId,jdbcType=INTEGER},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=TINYINT},
      </if>
      <if test="codeLength != null">
        code_length = #{codeLength,jdbcType=INTEGER},
      </if>
      <if test="judgetime != null">
        judgetime = #{judgetime,jdbcType=TIMESTAMP},
      </if>
      <if test="passRate != null">
        pass_rate = #{passRate,jdbcType=DECIMAL},
      </if>
      <if test="lintError != null">
        lint_error = #{lintError,jdbcType=INTEGER},
      </if>
      <if test="judger != null">
        judger = #{judger,jdbcType=CHAR},
      </if>
    </set>
    where solution_id = #{solutionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.noi.oj.domain.Solution">
    update solution
    set problem_id = #{problemId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      time = #{time,jdbcType=INTEGER},
      memory = #{memory,jdbcType=INTEGER},
      in_date = #{inDate,jdbcType=TIMESTAMP},
      result = #{result,jdbcType=SMALLINT},
      language = #{language,jdbcType=INTEGER},
      ip = #{ip,jdbcType=CHAR},
      contest_id = #{contestId,jdbcType=INTEGER},
      valid = #{valid,jdbcType=TINYINT},
      num = #{num,jdbcType=TINYINT},
      code_length = #{codeLength,jdbcType=INTEGER},
      judgetime = #{judgetime,jdbcType=TIMESTAMP},
      pass_rate = #{passRate,jdbcType=DECIMAL},
      lint_error = #{lintError,jdbcType=INTEGER},
      judger = #{judger,jdbcType=CHAR}
    where solution_id = #{solutionId,jdbcType=INTEGER}
  </update>
  <select id="count" parameterType="com.noi.oj.domain.Conditions" resultType="java.lang.Integer">
    select count(*)
    from solution
    where 1=1
    <if test="userId != null">
      and user_id = #{userId,jdbcType=BIGINT}
    </if>
    <if test="problemId != null">
      and problem_id = #{problemId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectList" parameterType="com.noi.oj.domain.Conditions" resultMap="BaseResultMap">
    select a.*,b.title
    from (select *
    from solution
    where 1=1
    <if test="userId != null">
      and user_id = #{userId,jdbcType=BIGINT}
    </if>
    <if test="problemId != null">
      and problem_id = #{problemId,jdbcType=INTEGER}
    </if>) as a
    inner join (select problem_id,title from problem) as b
    on a.problem_id = b.problem_id
    order by a.in_date desc
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset},${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="submit" parameterType="java.lang.Long" resultType="com.noi.oj.domain.SubmitMap">
    select DATE_FORMAT(in_date,'%Y-%m-%d') as date,count(solution_id) as count
    from solution
    where user_id=#{userId,jdbcType=BIGINT} and (YEAR(in_date) between YEAR (NOW())-1 AND YEAR (NOW()))
    group by date
  </select>
</mapper>