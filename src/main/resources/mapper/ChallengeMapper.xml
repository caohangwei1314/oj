<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.noi.oj.dao.ChallengeMapper">
  <resultMap id="BaseResultMap" type="com.noi.oj.domain.Challenge">
    <id column="challenge_id" jdbcType="INTEGER" property="challengeId" />
    <result column="problem_id" jdbcType="INTEGER" property="problemId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="BaseResultMapProblem" type="com.noi.oj.domain.ProblemWithBLOBs">
    <id column="problem_id" jdbcType="INTEGER" property="problemId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="spj" jdbcType="CHAR" property="spj" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="in_date" jdbcType="TIMESTAMP" property="inDate" />
    <result column="time_limit" jdbcType="INTEGER" property="timeLimit" />
    <result column="memory_limit" jdbcType="INTEGER" property="memoryLimit" />
    <result column="defunct" jdbcType="CHAR" property="defunct" />
    <result column="accepted" jdbcType="INTEGER" property="accepted" />
    <result column="submit" jdbcType="INTEGER" property="submit" />
    <result column="solved" jdbcType="INTEGER" property="solved" />
    <result column="packet_id" jdbcType="INTEGER" property="packetId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_free" jdbcType="TINYINT" property="isFree" />
    <result column="difficulty" jdbcType="TINYINT" property="difficulty" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="result" jdbcType="SMALLINT" property="result" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="input" jdbcType="LONGVARCHAR" property="input" />
    <result column="output" jdbcType="LONGVARCHAR" property="output" />
    <result column="sample_input" jdbcType="LONGVARCHAR" property="sampleInput" />
    <result column="sample_output" jdbcType="LONGVARCHAR" property="sampleOutput" />
    <result column="hint" jdbcType="LONGVARCHAR" property="hint" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    challenge_id, problem_id, user_id, start_time, end_time, status
  </sql>
  <select id="selectByExample" parameterType="com.noi.oj.domain.ChallengeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from challenge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from challenge
    where challenge_id = #{challengeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from challenge
    where challenge_id = #{challengeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.noi.oj.domain.ChallengeExample">
    delete from challenge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.noi.oj.domain.Challenge">
    insert into challenge (challenge_id, problem_id, user_id, 
      start_time, end_time, status
      )
    values (#{challengeId,jdbcType=INTEGER}, #{problemId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.noi.oj.domain.Challenge">
    insert into challenge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="challengeId != null">
        challenge_id,
      </if>
      <if test="problemId != null">
        problem_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="challengeId != null">
        #{challengeId,jdbcType=INTEGER},
      </if>
      <if test="problemId != null">
        #{problemId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.noi.oj.domain.ChallengeExample" resultType="java.lang.Long">
    select count(*) from challenge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update challenge
    <set>
      <if test="record.challengeId != null">
        challenge_id = #{record.challengeId,jdbcType=INTEGER},
      </if>
      <if test="record.problemId != null">
        problem_id = #{record.problemId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update challenge
    set challenge_id = #{record.challengeId,jdbcType=INTEGER},
      problem_id = #{record.problemId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.noi.oj.domain.Challenge">
    update challenge
    <set>
      <if test="problemId != null">
        problem_id = #{problemId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where challenge_id = #{challengeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.noi.oj.domain.Challenge">
    update challenge
    set problem_id = #{problemId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where challenge_id = #{challengeId,jdbcType=INTEGER}
  </update>
  <select id="selectChallenge" resultMap="BaseResultMapProblem">
    select a.*,b.start_time,b.end_time
    from problem as a
    inner join (select problem_id,start_time,end_time
    from challenge
    where user_id = #{userId,jdbcType=BIGINT}
    and end_time is null) as b
    on a.problem_id = b.problem_id
  </select>
</mapper>